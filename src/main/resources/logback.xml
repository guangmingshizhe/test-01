<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">
    <property name="LOG_DIR" value="./log"/>
    <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
    <property name="PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{39} - %msg%n"/>

    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_DIR}/error.log</file>
        <encoder>
            <charset>utf-8</charset>
            <pattern>${PATTERN}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_DIR}/error-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <!--保存日志天数-->
            <maxHistory>7</maxHistory>
            <!--单个日志文件大小-->
            <maxFileSize>200MB</maxFileSize>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
    </appender>

    <appender name="INFO-APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--最常用的滚动策略，它根据时间来制定滚动策略，既负责滚动也负责出发滚动&ndash;&gt;-->
        <file>${LOG_DIR}/info.log</file>
        <encoder>
            <charset>utf-8</charset>
            <pattern>${PATTERN}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_DIR}/info-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <!--保存日志天数-->
            <maxHistory>7</maxHistory>
            <!--单个日志文件大小-->
            <maxFileSize>200MB</maxFileSize>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
    </appender>
    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${PATTERN}</pattern>
        </encoder>
    </appender>


    <!--
    用来设置某一个包或者具体的某一个类的日志打印级别、以及指定<appender>。
    <logger>仅有一个name属性，一个可选的level和一个可选的additivity属性
    name:
        用来指定受此logger约束的某一个包或者具体的某一个类。
    level:
        用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，
        如果未设置此属性，那么当前logger将会继承上级的级别。
    additivity:
        是否向上级logger传递打印信息。默认是true。
    <logger>可以包含零个或多个<appender-ref>元素，标识这个appender将会添加到这个logger
    -->

    <Logger name="com.study" level="debug" additivity="false">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="INFO-APPENDER"/>
    </Logger>

    <!--    &lt;!&ndash;这个是自定义日志类型SQLTRACE&ndash;&gt;-->
    <!--    <logger name="SQLTRACE" level="info" additivity="false">-->
    <!--        <appender-ref ref="STDOUT"/>-->
    <!--    </logger>-->

    <!--
        也是<logger>元素，但是它是根logger。默认debug
        level:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，
        <root>可以包含零个或多个<appender-ref>元素，标识这个appender将会添加到这个logger。
    -->
    <root level="info">
        <appender-ref ref="ERROR"/>
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="INFO-APPENDER"/>
    </root>
</configuration>